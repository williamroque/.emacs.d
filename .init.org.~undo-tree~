(undo-tree-save-format-version . 1)
"70dfa885714bc4cc805871f05d76b2a2617f797b"
[nil nil nil nil (25225 53156 39874 0) 0 nil]
([nil nil ((25016 . 25017) (25010 . 25016) (t 25225 35210 532962 146000)) nil (25225 53156 39873 0) 0 nil])
([nil nil ((25016 . 25017)) nil (25225 53156 39871 0) 0 nil])
([nil nil ((25065 . 25073)) nil (25225 53211 334051 0) 0 nil])
([nil nil ((25160 . 25168) (25196 . 25200) (25232 . 25236) (25268 . 25276) (25372 . 25380) (25406 . 25410) (25442 . 25446) (25467 . 25475)) ((#("        " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25467) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25442) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25406) (undo-tree-id40 . 4) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25372) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25268) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25232) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25196) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 25160)) (25225 53212 187022 0) 0 nil])
([nil nil ((nil fontified t 24874 . 24875) (t 25225 53212 769194 812000) (nil keymap (keymap) 24874 . 24875) (t 25225 53212 769194 812000) (nil face org-level-2 24874 . 24875) (t 25225 53212 769194 812000) (nil fontified t 24873 . 24874) (t 25225 53212 769194 812000) (nil composition (0 1 [8203]) 24873 . 24874) (t 25225 53212 769194 812000) (nil keymap (keymap) 24873 . 24874) (t 25225 53212 769194 812000) (nil face org-level-2 24873 . 24874) (t 25225 53212 769194 812000) (nil fontified t 24872 . 24873) (t 25225 53212 769194 812000) (nil face org-hide 24872 . 24873) (t 25225 53212 769194 812000) (nil keymap (keymap) 24872 . 24873) (t 25225 53212 769194 812000) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24871) (t 25225 53212 769194 812000) (24874 . 24878) 25160 (t 25225 53212 769194 812000)) nil (25225 53334 108271 0) 0 nil] [nil nil ((#("                                            helm-source-projectile-recentf-list
                                            helm-source-projectile-buffers-list
                                            helm-source-projectile-projects
                                            helm-source-projectile-files-list
" 0 36 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 36 44 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 44 80 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 80 84 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 84 120 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 120 124 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 124 160 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 160 168 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 168 272 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 272 280 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 280 314 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 25124) (undo-tree-id0 . -238) (undo-tree-id1 . -2) (undo-tree-id2 . -238) (undo-tree-id3 . -238) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -82) (undo-tree-id9 . -82) (undo-tree-id10 . -82) (undo-tree-id11 . -82) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -314) (undo-tree-id17 . -2) (undo-tree-id18 . -238) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -82) (undo-tree-id28 . -82) (undo-tree-id29 . -82) (undo-tree-id30 . -82) (undo-tree-id31 . -162) (undo-tree-id32 . -162) (undo-tree-id33 . -162) (undo-tree-id34 . -162) (undo-tree-id35 . -238) (undo-tree-id36 . -238) (undo-tree-id37 . -238) (undo-tree-id38 . -238) (undo-tree-id39 . -238) 25362 (t 25225 53159 629682 263000)) ((25124 . 25438) (t 25225 53199 358471 615000)) (25225 53199 351436 0) 0 nil])
([nil nil ((nil fontified t 24875 . 24876) (nil keymap (keymap) 24875 . 24876) (nil face org-level-3 24875 . 24876) (nil fontified t 24874 . 24875) (nil composition (0 1 [8203]) 24874 . 24875) (nil keymap (keymap) 24874 . 24875) (nil face org-level-3 24874 . 24875) (nil fontified t 24872 . 24874) (nil face org-hide 24872 . 24874) (nil keymap (keymap) 24872 . 24874) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (0 1 [8203]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 24871) (24875 . 24880) 25161) nil (25225 53334 108265 0) 0 nil])
nil
([nil nil ((nil fontified t 24876 . 24877) (nil keymap (keymap) 24876 . 24877) (nil face org-level-4 24876 . 24877) (nil fontified t 24875 . 24876) (nil composition (0 1 [8203]) 24875 . 24876) (nil keymap (keymap) 24875 . 24876) (nil face org-level-4 24875 . 24876) (nil fontified t 24872 . 24875) (nil face org-hide 24872 . 24875) (nil keymap (keymap) 24872 . 24875) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (0 1 [8203]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 24871) (24876 . 24882) 25162) nil (25225 53334 108261 0) 0 nil])
([nil nil ((nil fontified t 24877 . 24878) (nil keymap (keymap) 24877 . 24878) (nil face org-level-5 24877 . 24878) (nil fontified t 24876 . 24877) (nil composition (0 1 [8203]) 24876 . 24877) (nil keymap (keymap) 24876 . 24877) (nil face org-level-5 24876 . 24877) (nil fontified t 24872 . 24876) (nil face org-hide 24872 . 24876) (nil keymap (keymap) 24872 . 24876) (#("***** " 0 4 (keymap (keymap) face org-hide fontified t) 4 5 (face org-level-5 keymap (keymap) composition (0 1 [8203]) fontified t) 5 6 (face org-level-5 keymap (keymap) fontified t)) . 24871) (24877 . 24884) 25163) nil (25225 53334 108258 0) 0 nil])
([nil nil ((nil fontified t 24876 . 24877) (nil keymap (keymap) 24876 . 24877) (nil face org-level-6 24876 . 24877) (nil fontified t 24875 . 24876) (nil composition (0 1 [8203]) 24875 . 24876) (nil keymap (keymap) 24875 . 24876) (nil face org-level-6 24875 . 24876) (nil fontified t 24871 . 24875) (nil face org-hide 24871 . 24875) (nil keymap (keymap) 24871 . 24875) (#("****** " 0 5 (keymap (keymap) face org-hide fontified t) 5 6 (face org-level-6 keymap (keymap) composition (0 1 [8203]) fontified t) 6 7 (face org-level-6 keymap (keymap) fontified t)) . 24871) (24878 . 24884) 25164) nil (25225 53334 108254 0) 0 nil])
([nil nil ((nil fontified t 24875 . 24876) (nil keymap (keymap) 24875 . 24876) (nil face org-level-5 24875 . 24876) (nil fontified t 24874 . 24875) (nil composition (0 1 [8203]) 24874 . 24875) (nil keymap (keymap) 24874 . 24875) (nil face org-level-5 24874 . 24875) (nil fontified t 24871 . 24874) (nil face org-hide 24871 . 24874) (nil keymap (keymap) 24871 . 24874) (#("***** " 0 4 (keymap (keymap) face org-hide fontified t) 4 5 (face org-level-5 keymap (keymap) composition (0 1 [8203]) fontified t) 5 6 (face org-level-5 keymap (keymap) fontified t)) . 24871) (24877 . 24882) 25163) nil (25225 53334 108249 0) 0 nil])
([nil nil ((nil fontified t 24874 . 24875) (nil keymap (keymap) 24874 . 24875) (nil face org-level-4 24874 . 24875) (nil fontified t 24873 . 24874) (nil composition (0 1 [8203]) 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (nil face org-level-4 24873 . 24874) (nil fontified t 24871 . 24873) (nil face org-hide 24871 . 24873) (nil keymap (keymap) 24871 . 24873) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (0 1 [8203]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 24871) (24876 . 24880) 25162) nil (25225 53334 108246 0) 0 nil])
([nil nil ((nil fontified t 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (nil face org-level-3 24873 . 24874) (nil fontified t 24872 . 24873) (nil composition (0 1 [8203]) 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil face org-level-3 24872 . 24873) (nil fontified t 24871 . 24872) (nil face org-hide 24871 . 24872) (nil keymap (keymap) 24871 . 24872) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (0 1 [8203]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 24871) (24875 . 24878) 25161) nil (25225 53360 665763 0) 0 nil])
([nil nil ((90970 . 91172) 87817 (t 25225 53337 179905 971000)) nil (25225 53402 650485 0) 0 nil] [nil nil ((nil fontified nil 36654 . 36655) (t 25225 53337 179905 971000) (nil keymap (keymap) 36654 . 36655) (t 25225 53337 179905 971000) (nil face org-level-2 36654 . 36655) (t 25225 53337 179905 971000) (nil fontified nil 36653 . 36654) (t 25225 53337 179905 971000) (nil composition (0 1 [8203]) 36653 . 36654) (t 25225 53337 179905 971000) (nil keymap (keymap) 36653 . 36654) (t 25225 53337 179905 971000) (nil face org-level-2 36653 . 36654) (t 25225 53337 179905 971000) (nil fontified nil 36652 . 36653) (t 25225 53337 179905 971000) (nil face org-hide 36652 . 36653) (t 25225 53337 179905 971000) (nil keymap (keymap) 36652 . 36653) (t 25225 53337 179905 971000) (#("** " 0 1 (keymap (keymap) face org-hide fontified nil) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 2 3 (face org-level-2 keymap (keymap) fontified nil)) . 36651) (t 25225 53337 179905 971000) (36654 . 36658) 38808 (t 25225 53337 179905 971000)) ((#("*** " 0 1 (fontified nil) 1 2 (keymap (keymap) face org-hide fontified nil) 2 3 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 3 4 (face org-level-2 keymap (keymap) fontified nil)) . 36654) (t 25225 53337 179905 971000) (36651 . 36654) (t 25225 53337 179905 971000) (nil keymap nil 36652 . 36653) (t 25225 53337 179905 971000) (nil face nil 36652 . 36653) (t 25225 53337 179905 971000) (nil face nil 36653 . 36654) (t 25225 53337 179905 971000) (nil keymap nil 36653 . 36654) (t 25225 53337 179905 971000) (nil composition nil 36653 . 36654) (t 25225 53337 179905 971000) (nil face nil 36654 . 36655) (t 25225 53337 179905 971000) (nil keymap nil 36654 . 36655) (t 25225 53337 179905 971000)) (25225 53360 405283 0) 0 nil] [nil nil ((nil fontified t 36654 . 36655) (t 25225 53337 179905 971000) (nil keymap (keymap) 36654 . 36655) (t 25225 53337 179905 971000) (nil face org-level-2 36654 . 36655) (t 25225 53337 179905 971000) (nil fontified t 36653 . 36654) (t 25225 53337 179905 971000) (nil composition (0 1 [8203]) 36653 . 36654) (t 25225 53337 179905 971000) (nil keymap (keymap) 36653 . 36654) (t 25225 53337 179905 971000) (nil face org-level-2 36653 . 36654) (t 25225 53337 179905 971000) (nil fontified t 36652 . 36653) (t 25225 53337 179905 971000) (nil face org-hide 36652 . 36653) (t 25225 53337 179905 971000) (nil keymap (keymap) 36652 . 36653) (t 25225 53337 179905 971000) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 36651) (t 25225 53337 179905 971000) (36654 . 36658) 38808 (t 25225 53337 179905 971000)) ((#("*** " 0 1 (fontified nil) 1 2 (keymap (keymap) face org-hide fontified nil) 2 3 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 3 4 (face org-level-2 keymap (keymap) fontified nil)) . 36654) (t 25225 53337 179905 971000) (36651 . 36654) (t 25225 53337 179905 971000) (nil keymap nil 36652 . 36653) (t 25225 53337 179905 971000) (nil face nil 36652 . 36653) (t 25225 53337 179905 971000) (nil fontified nil 36652 . 36653) (t 25225 53337 179905 971000) (nil face nil 36653 . 36654) (t 25225 53337 179905 971000) (nil keymap nil 36653 . 36654) (t 25225 53337 179905 971000) (nil composition nil 36653 . 36654) (t 25225 53337 179905 971000) (nil fontified nil 36653 . 36654) (t 25225 53337 179905 971000) (nil face nil 36654 . 36655) (t 25225 53337 179905 971000) (nil keymap nil 36654 . 36655) (t 25225 53337 179905 971000) (nil fontified nil 36654 . 36655)) (25225 53351 227996 0) 0 nil] [nil nil ((nil fontified t 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil face org-level-2 24872 . 24873) (nil fontified t 24871 . 24872) (nil composition (0 1 [8203]) 24871 . 24872) (nil keymap (keymap) 24871 . 24872) (nil face org-level-2 24871 . 24872) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24871) (24874 . 24876) 25160) ((#("* " 0 1 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 1 2 (face org-level-2 keymap (keymap) fontified nil)) . 24874) (24871 . 24874) (nil face org-level-1 24871 . 24872) (nil keymap (keymap) 24871 . 24872) (nil composition (0 1 [8203]) 24871 . 24872) (nil fontified nil 24871 . 24872) (nil face org-level-1 24872 . 24873) (nil keymap (keymap) 24872 . 24873)) (25225 53335 216975 0) 0 nil])
([nil nil ((90984 . 91012) 87817 (t 25225 53402 658585 850000)) nil (25225 53420 140220 0) 0 nil])
([nil nil ((nil fontified nil 36651 . 36654) (#("*** " 0 4 (fontified nil)) . 36651) (36655 . 36658) 38809) ((#("** " 0 3 (fontified nil)) . 36655) (36651 . 36655)) (25225 53360 404982 0) 0 nil])
([nil nil ((nil fontified nil 36651 . 36654) (#("*** " 0 4 (fontified nil)) . 36651) (36655 . 36658) 38809) ((#("** " 0 3 (fontified nil)) . 36655) (36651 . 36655)) (25225 53351 227534 0) 0 nil])
([nil nil ((nil fontified t 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (nil face org-level-1 24873 . 24874) (nil fontified t 24872 . 24873) (nil composition (0 1 [8203]) 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil face org-level-1 24872 . 24873) (#("* " 0 1 (face org-level-1 keymap (keymap) composition (0 1 [8203]) fontified t) 1 2 (face org-level-1 keymap (keymap) fontified t)) . 24871) (24873 . 24876) 25159) ((#("** " 0 1 (keymap (keymap) face org-hide fontified nil) 1 2 (face org-level-1 keymap (keymap) composition (0 1 [8203]) fontified nil) 2 3 (face org-level-1 keymap (keymap) fontified nil)) . 24873) (24871 . 24873) (nil face org-level-2 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil composition (0 1 [8203]) 24872 . 24873) (nil fontified nil 24872 . 24873) (nil face org-level-2 24873 . 24874) (nil keymap (keymap) 24873 . 24874)) (25225 53334 809112 0) 0 nil])
([nil nil ((91014 . 91015) (#("global-s" 0 8 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91014) (91023 . 91027) (#("t" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91023) (91028 . 91041) (91061 . 91062) (#("global-s" 0 8 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91061) (91070 . 91074) (#("t" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91070) (91075 . 91088) (91108 . 91109) (#("global-s" 0 8 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91108) (91117 . 91121) (#("t" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91117) (91122 . 91135) (91153 . 91154) (#("global-s" 0 8 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91153) (91162 . 91166) (#("t" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 91162) (91167 . 91180) 87817 (t 25225 53420 148606 808000)) nil (25225 53463 559985 0) 0 nil])
nil
nil
([nil nil ((nil fontified t 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil face org-level-2 24872 . 24873) (nil fontified t 24871 . 24872) (nil composition (0 1 [8203]) 24871 . 24872) (nil keymap (keymap) 24871 . 24872) (nil face org-level-2 24871 . 24872) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24871) (24874 . 24876) 24950) ((#("* " 0 1 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 1 2 (face org-level-2 keymap (keymap) fontified nil)) . 24874) (24871 . 24874) (nil face org-level-1 24871 . 24872) (nil keymap (keymap) 24871 . 24872) (nil composition (0 1 [8203]) 24871 . 24872) (nil fontified nil 24871 . 24872) (nil face org-level-1 24872 . 24873) (nil keymap (keymap) 24872 . 24873)) (25225 53334 472680 0) 0 nil])
([nil nil ((91014 . 91019) (t 25225 53455 384578 69000)) nil (25225 53476 40442 0) 0 nil] [nil nil ((nil fontified t 87717 . 87718) (t 25225 53455 384578 69000) (nil keymap (keymap) 87717 . 87718) (t 25225 53455 384578 69000) (nil face org-level-2 87717 . 87718) (t 25225 53455 384578 69000) (nil fontified t 87716 . 87717) (t 25225 53455 384578 69000) (nil composition (0 1 [8203]) 87716 . 87717) (t 25225 53455 384578 69000) (nil keymap (keymap) 87716 . 87717) (t 25225 53455 384578 69000) (nil face org-level-2 87716 . 87717) (t 25225 53455 384578 69000) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 87716) (t 25225 53455 384578 69000) (87719 . 87721) 90914 (t 25225 53455 384578 69000)) ((#("* " 0 1 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified nil) 1 2 (face org-level-2 keymap (keymap) fontified nil)) . 87719) (t 25225 53455 384578 69000) (87716 . 87719) (t 25225 53455 384578 69000) (nil face nil 87716 . 87717) (t 25225 53455 384578 69000) (nil keymap nil 87716 . 87717) (t 25225 53455 384578 69000) (nil composition nil 87716 . 87717) (t 25225 53455 384578 69000) (nil fontified nil 87716 . 87717) (t 25225 53455 384578 69000) (nil face nil 87717 . 87718) (t 25225 53455 384578 69000) (nil keymap nil 87717 . 87718) (t 25225 53455 384578 69000) (nil fontified nil 87717 . 87718)) (25225 53463 556842 0) 0 nil])
([nil nil ((nil fontified t 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (nil face org-level-1 24873 . 24874) (nil fontified t 24872 . 24873) (nil composition (0 1 [8203]) 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil face org-level-1 24872 . 24873) (#("* " 0 1 (face org-level-1 keymap (keymap) composition (0 1 [8203]) fontified t) 1 2 (face org-level-1 keymap (keymap) fontified t)) . 24871) (24873 . 24876) 24949) ((#("** " 0 1 (keymap (keymap) face org-hide fontified nil) 1 2 (face org-level-1 keymap (keymap) composition (0 1 [8203]) fontified nil) 2 3 (face org-level-1 keymap (keymap) fontified nil)) . 24873) (24871 . 24873) (nil face org-level-2 24872 . 24873) (nil keymap (keymap) 24872 . 24873) (nil composition (0 1 [8203]) 24872 . 24873) (nil fontified nil 24872 . 24873) (nil face org-level-2 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (t 25225 53334 116069 295000)) (25225 53334 108223 0) 0 nil])
([nil nil ((91075 . 91080)) nil (25225 53476 40441 0) 0 nil])
nil
nil
([nil nil ((91199 . 91200) (91198 . 91199) (91197 . 91198) (91196 . 91197) (91195 . 91196) (91136 . 91141)) nil (25225 53485 889334 0) 0 nil])
([nil nil ((91030 . 91036) (t 25225 53476 48752 337000)) nil (25225 53494 833404 0) 0 nil] [nil nil ((91030 . 91109) (t 25225 53476 48752 337000)) ((#("'normal                                                                        " 0 79 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91030)) (25225 53485 549472 0) 0 nil])
([nil nil ((91030 . 91031) (91036 . 91037) (91097 . 91099) (91099 . 91105) (91157 . 91165) (91216 . 91224) 87817) nil (25225 53503 258797 0) 0 nil] [nil nil ((91036 . 91108)) ((#("                                                                        " 0 72 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91036)) (25225 53494 658714 0) 0 nil])
([nil nil ((91170 . 91171)) ((#("'" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91170) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1)) (25225 53485 353079 0) 0 nil])
([nil nil ((25168 . 25171) (25247 . 25250) (25328 . 25331) (25403 . 25406) 24952 (t 25225 53503 267502 155000)) nil (25225 53538 307328 0) 0 nil])
([nil nil ((91169 . 91170)) ((#("n" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91169) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1)) (25225 53494 481820 0) 0 nil])
([nil nil ((91171 . 91172)) ((#("n" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91171) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1)) (25225 53485 162596 0) 0 nil])
([nil nil ((25060 . 25110) 24952 (t 25225 53538 315341 320000)) nil (25225 53552 451534 0) 0 nil])
([nil nil ((91170 . 91171)) ((#("o" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91170) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1)) (25225 53494 245625 0) 0 nil])
([nil nil ((91172 . 91173)) ((#("o" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91172) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1)) (25225 53484 953198 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22665) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (t 25225 53552 460253 140000)) nil (25225 53584 534432 0) 0 nil])
([nil nil ((91171 . 91172)) ((#("r" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91171) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1)) (25225 53493 924100 0) 0 nil])
([nil nil ((91173 . 91174)) ((#("r" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91173) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) (25225 53484 665105 0) 0 nil])
([nil nil ((nil fontified t 24542 . 24543) (t 25225 53579 138689 236000) (nil keymap (keymap) 24542 . 24543) (t 25225 53579 138689 236000) (nil face org-level-2 24542 . 24543) (t 25225 53579 138689 236000) (nil fontified t 24541 . 24542) (t 25225 53579 138689 236000) (nil composition (0 1 [8203]) 24541 . 24542) (t 25225 53579 138689 236000) (nil keymap (keymap) 24541 . 24542) (t 25225 53579 138689 236000) (nil face org-level-2 24541 . 24542) (t 25225 53579 138689 236000) (nil fontified t 24540 . 24541) (t 25225 53579 138689 236000) (nil face org-hide 24540 . 24541) (t 25225 53579 138689 236000) (nil keymap (keymap) 24540 . 24541) (t 25225 53579 138689 236000) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24539) (t 25225 53579 138689 236000) (24542 . 24546) 24539 (t 25225 53579 138689 236000)) nil (25225 53592 449020 0) 0 nil] [nil nil ((25739 . 25743) (#("                                            " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 8 44 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -25716) (25668 . 25716) (#("                                            " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 40 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 40 44 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -25643) (25595 . 25643) (#("                                            " 0 36 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 36 43 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 43 44 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25558) (undo-tree-id357 . -2) (undo-tree-id358 . -7) (25510 . 25558) (#("                                            " 0 8 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 8 44 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . -25475) (25427 . 25475) (#("                                            " 0 4 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 4 40 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 40 43 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 43 44 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25388) (25340 . 25388) (#("                                            " 0 36 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil) 36 44 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . -25301) (25253 . 25301) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -25189) (25185 . 25189) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25137) (25133 . 25137) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25080) (25076 . 25080) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25068) (25064 . 25068) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -25054) (25050 . 25054) (25017 . 25021) (24978 . 24982) (24947 . 24951) (24924 . 24928) (24909 . 24913) (24883 . 24887) (24844 . 24848) (24821 . 24825) (24806 . 24810) (24791 . 24795) (24751 . 24755) (24687 . 24691) (24657 . 24661) (24642 . 24646) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -24622) (24618 . 24622) (24593 . 24597) (24554 . 24558) (24539 . 24543) 25646 (t 25225 53579 138689 236000)) ((#("    " 0 4 (fontified t)) . 24539) (#("    " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . 24554) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t help-echo nil font-lock-fontified t fontified nil)) . 24593) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 24618) (24622 . 24624) (#("    " 0 4 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 24642) (#("    " 0 4 (fontified t)) . 24657) (#("    " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . 24687) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t help-echo nil font-lock-fontified t fontified nil)) . 24751) (#("    " 0 4 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 24791) (#("    " 0 4 (fontified t)) . 24806) (#("    " 0 4 (fontified t)) . 24821) (#("    " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . 24844) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t help-echo nil font-lock-fontified t fontified nil)) . 24883) (#("    " 0 4 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 24909) (#("    " 0 4 (fontified t)) . 24924) (#("    " 0 4 (fontified t)) . 24947) (#("    " 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . 24978) (#("    " 0 4 (src-block t face (org-block) font-lock-multiline t help-echo nil font-lock-fontified t fontified nil)) . 25017) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 25050) (25054 . 25056) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 25064) (25068 . 25070) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 25076) (25080 . 25082) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 25133) (25137 . 25139) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 25185) (25189 . 25191) (#("                                                " 0 48 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . 25253) (25301 . 25345) (#("                                                " 0 48 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . 25340) (25388 . 25432) (#("                                                " 0 48 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . 25427) (25475 . 25519) (#("                                                " 0 48 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . 25510) (25558 . 25602) (#("                                                " 0 48 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified nil)) . 25595) (25643 . 25687) (#("                                                " 0 48 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 25668) (25716 . 25760) (#("    " 0 4 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 25739)) (25225 53584 530873 0) 0 nil])
([nil nil ((91172 . 91173)) ((#("m" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91172) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1)) (25225 53493 562879 0) 0 nil])
([nil nil ((91174 . 91175)) ((#("m" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91174) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1)) (25225 53484 321514 0) 0 nil])
([nil nil ((nil fontified t 24776 . 24777) (nil keymap (keymap) 24776 . 24777) (nil face org-level-2 24776 . 24777) (nil fontified t 24775 . 24776) (nil composition (0 1 [8203]) 24775 . 24776) (nil keymap (keymap) 24775 . 24776) (nil face org-level-2 24775 . 24776) (nil fontified t 24774 . 24775) (nil face org-hide 24774 . 24775) (nil keymap (keymap) 24774 . 24775) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24773) (24776 . 24780) 24773) nil (25225 53592 449013 0) 0 nil])
nil
([nil nil ((91173 . 91174)) ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91173) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1)) (25225 53493 185498 0) 0 nil])
([nil nil ((91175 . 91176)) ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91175) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1)) (25225 53483 893729 0) 0 nil])
([nil nil ((nil fontified t 24875 . 24876) (nil keymap (keymap) 24875 . 24876) (nil face org-level-2 24875 . 24876) (nil fontified t 24874 . 24875) (nil composition (0 1 [8203]) 24874 . 24875) (nil keymap (keymap) 24874 . 24875) (nil face org-level-2 24874 . 24875) (nil fontified t 24873 . 24874) (nil face org-hide 24873 . 24874) (nil keymap (keymap) 24873 . 24874) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (0 1 [8203]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 24872) (24875 . 24879) 24872) nil (25225 53592 449004 0) 0 nil])
([nil nil ((91174 . 91175)) ((#("l" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91174) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1)) (25225 53492 619227 0) 0 nil])
([nil nil ((91176 . 91177)) ((#("l" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91176) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1)) (25225 53483 334102 0) 0 nil])
([nil nil ((23826 . 23983) 23316 (t 25225 53592 457828 638000)) nil (25225 53838 313737 0) 0 nil])
([nil nil ((91175 . 91246)) ((#("                                                                       " 0 71 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91175)) (25225 53492 618921 0) 0 nil])
([nil nil ((91177 . 91248)) ((#("                                                                       " 0 71 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 91177)) (25225 53483 333760 0) 0 nil])
([nil nil ((23899 . 23903) (#("back" 0 4 (fontified nil)) . 23899) (23910 . 23918) (#("\"#191919\"" 0 9 (fontified nil)) . 23910) 23316 (t 25225 53838 321522 20000)) nil (25225 53888 915755 0) 0 nil])
nil
nil
([nil nil ((#("
                    :weight 'bold" 0 34 (fontified nil)) . 23918) 23316 (t 25225 53888 924094 843000)) nil (25225 53891 491260 0) 0 nil])
([nil nil ((#("'" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 23910) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (t 25225 53891 500004 658000)) nil (25225 53897 493212 0) 0 nil])
([nil nil ((23911 . 23918) (23910 . 23912) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . -23910) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (23910 . 23911) (#("inherit" 0 7 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 23910) (t 25225 53897 501935 808000)) nil (25225 53901 665735 0) 0 nil])
([nil nil ((23910 . 23921) (#("\"inherit\"" 0 8 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 8 9 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 23910) (undo-tree-id6 . 1) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (undo-tree-id9 . -7) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (undo-tree-id12 . -7) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (undo-tree-id24 . -7) (undo-tree-id25 . -6) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) 23916 (t 25225 53901 674269 150000)) nil (25225 53955 65566 0) 0 nil])
([nil nil ((23910 . 23911) (t 25225 53955 73704 654000)) nil (25225 53957 791064 0) 0 nil])
([nil nil ((#("hl-line nil
                    :background \"#1a1c1f\")


(set-face-attribute '" 0 32 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 32 43 (src-block t help-echo nil face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 44 53 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 53 78 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 5002) (undo-tree-id0 . -7) 4800 (t 25225 53957 799672 254000)) nil (25225 54169 332274 0) 0 nil])
([nil nil ((#("org-tag nil
                    :height 140)


(set-face-attribute '" 0 32 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 32 39 (src-block t help-echo nil face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil) 39 68 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 5002) 4800 (t 25225 54169 341797 758000)) nil (25225 54175 226342 0) 0 nil])
([nil nil ((80262 . 80264) 80232 (t 25225 54175 234758 530000)) nil (25225 54193 575414 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 80264 . 80265) (#("
" 0 1 (fontified nil)) . -80332) (80264 . 80333)) nil (25225 54193 575412 0) 0 nil])
([nil nil ((#("

" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 80263) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -2) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (25225 54230 923279 0) 0 nil])
([nil nil ((#("

;; enable paredit for lisp
(autoload 'enable-paredit-mode \"paredit\" \"Turn on pseudo-structural editing of Lisp code.\" t)
(add-hook 'emacs-lisp-mode-hook       #'enable-paredit-mode)
(add-hook 'eval-expression-minibuffer-setup-hook #'enable-paredit-mode)
(add-hook 'ielm-mode-hook             #'enable-paredit-mode)
(add-hook 'lisp-mode-hook             #'enable-paredit-mode)
(add-hook 'lisp-interaction-mode-hook #'enable-paredit-mode)
(add-hook 'scheme-mode-hook           #'enable-paredit-mode)
" 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 2 5 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 29 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 29 60 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 60 69 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 69 70 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 70 119 (src-block t help-echo nil face (font-lock-doc-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 119 500 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 26323) (undo-tree-id170 . -451) (undo-tree-id171 . -451) (undo-tree-id172 . -425) (undo-tree-id173 . -432) (undo-tree-id174 . -364) (undo-tree-id175 . -371) (undo-tree-id176 . -12) (undo-tree-id177 . -12) (undo-tree-id178 . -47) (undo-tree-id179 . -47) (undo-tree-id180 . -61) (undo-tree-id181 . -61) (undo-tree-id182 . -170) (undo-tree-id183 . -170) (undo-tree-id184 . -242) (undo-tree-id185 . -242) (undo-tree-id186 . -303) (undo-tree-id187 . -303) (undo-tree-id188 . -364) (undo-tree-id189 . -364) (undo-tree-id190 . -425) (undo-tree-id191 . -425) (undo-tree-id192 . -486) (undo-tree-id193 . -486) (undo-tree-id194 . -486) (undo-tree-id195 . -493) (undo-tree-id196 . -303) (undo-tree-id197 . -310) (undo-tree-id198 . -242) (undo-tree-id199 . -249) (undo-tree-id200 . -170) (undo-tree-id201 . -177) (undo-tree-id202 . -61) (undo-tree-id203 . -68) (undo-tree-id204 . -47) (undo-tree-id205 . -54) (undo-tree-id206 . -12) (undo-tree-id207 . -19) (undo-tree-id208 . -500) (undo-tree-id209 . -451) (t 25225 54193 585570 518000)) nil (25225 54257 713647 0) 0 nil] [nil nil ((26917 . 26919) (#("(" 0 1 (fontified nil)) . -26917) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (26917 . 26918) (t 25225 54193 585570 518000)) ((#("(" 0 1 (fontified nil)) . 26917) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (26917 . 26918) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 26917) (undo-tree-id41 . 1) (undo-tree-id42 . 2) (undo-tree-id43 . -1) (undo-tree-id44 . 1) (undo-tree-id45 . -2)) (25225 54230 922640 0) 0 nil] [nil nil ((26917 . 26919) (#("\"" 0 1 (fontified nil)) . -26917) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (26917 . 26918) (t 25225 54193 585570 518000)) ((#("\"" 0 1 (fontified nil)) . 26917) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (26917 . 26918) (#("\"\"" 0 1 (fontified t) 1 2 (fontified t)) . 26917) (undo-tree-id34 . 1)) (25225 54228 3625 0) 0 nil])
([nil nil ((#("
Make sure =C-j= works by disabling =paredit= in minibuffer. Didn't
like it very much anyway, so this should be fine.

#+begin_src emacs-lisp :tangle yes
(add-hook 'minibuffer-setup-hook (lambda () (paredit-mode 0)))
#+end_src
" 0 11 (fontified t) 11 12 (org-emphasis t font-lock-multiline t face (org-emphasis-marker org-verbatim) fontified t) 12 15 (org-emphasis t font-lock-multiline t face (org-verbatim) fontified t) 15 16 (org-emphasis t font-lock-multiline t face (org-emphasis-marker org-verbatim) fontified t) 16 36 (fontified t) 36 37 (org-emphasis t font-lock-multiline t face (org-emphasis-marker org-verbatim) fontified t) 37 44 (org-emphasis t font-lock-multiline t face (org-verbatim) fontified t) 44 45 (org-emphasis t font-lock-multiline t face (org-emphasis-marker org-verbatim) fontified t) 45 119 (fontified t) 119 130 (face org-block-begin-line font-lock-multiline t prettify-symbols-end 53630 prettify-symbols-start 53619 composition (1 11 [8614]) font-lock-fontified t fontified t) 130 142 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 142 153 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 153 154 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t) 154 188 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 188 194 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 194 217 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 217 226 (face org-block-end-line font-lock-multiline t prettify-symbols-end 53726 prettify-symbols-start 53717 composition (2 9 [8676]) font-lock-fontified t fontified t) 226 227 (face org-block-end-line fontified t)) . 53000) (undo-tree-id46 . -217) (undo-tree-id47 . -217) (undo-tree-id48 . -37) (undo-tree-id49 . -37) (undo-tree-id50 . -199) (undo-tree-id51 . -37) (undo-tree-id52 . -37) (undo-tree-id53 . -37) (undo-tree-id54 . -37) (undo-tree-id55 . -37) (undo-tree-id56 . -37) (undo-tree-id57 . -44) (undo-tree-id58 . -199) (undo-tree-id59 . -206) (undo-tree-id60 . -37) (undo-tree-id61 . -37) (undo-tree-id62 . -37) (undo-tree-id63 . -37) (undo-tree-id64 . -37) (undo-tree-id65 . -37) (undo-tree-id66 . -37) (undo-tree-id67 . -37) (undo-tree-id68 . -104) (undo-tree-id69 . -104) (undo-tree-id70 . -104) (undo-tree-id71 . -104) (undo-tree-id72 . -104) (undo-tree-id73 . -104) (undo-tree-id74 . -104) (undo-tree-id75 . -104) (undo-tree-id76 . -118) (undo-tree-id77 . -118) (undo-tree-id78 . -118) (undo-tree-id79 . -118) (undo-tree-id80 . -118) (undo-tree-id81 . -118) (undo-tree-id82 . -118) (undo-tree-id83 . -118) (undo-tree-id84 . -226) (undo-tree-id85 . -226) (undo-tree-id86 . -226) (undo-tree-id87 . -226) (undo-tree-id88 . -226) (undo-tree-id89 . -226) (undo-tree-id90 . -226) (undo-tree-id91 . -226) (undo-tree-id92 . -227) (undo-tree-id93 . -227) (undo-tree-id94 . -227) (undo-tree-id95 . -227) (undo-tree-id96 . -153) (undo-tree-id97 . -153) (undo-tree-id98 . -153) (undo-tree-id99 . -153) (undo-tree-id100 . -119) (undo-tree-id101 . -119) (undo-tree-id102 . -119) (undo-tree-id103 . -119) (undo-tree-id104 . -119) (undo-tree-id105 . -119) (undo-tree-id106 . -119) (undo-tree-id107 . -119) (undo-tree-id108 . -119) (undo-tree-id109 . -119) (undo-tree-id110 . -119) (undo-tree-id111 . -119) (undo-tree-id112 . -154) (undo-tree-id113 . -154) (undo-tree-id114 . -154) (undo-tree-id115 . -154) (undo-tree-id116 . -154) (undo-tree-id117 . -154) (undo-tree-id118 . -154) (undo-tree-id119 . -154) (undo-tree-id120 . -217) (undo-tree-id121 . -217) (undo-tree-id122 . -217) (undo-tree-id123 . -217) (undo-tree-id124 . -217) (undo-tree-id125 . -217) (undo-tree-id126 . -217) (undo-tree-id127 . -217) (undo-tree-id128 . -217) (undo-tree-id129 . -217) (undo-tree-id130 . -217) (undo-tree-id131 . -217) (undo-tree-id132 . -227) (undo-tree-id133 . -217) (undo-tree-id134 . -217) (undo-tree-id135 . -217) (undo-tree-id136 . -217) (undo-tree-id137 . -217) (undo-tree-id138 . -217) (undo-tree-id139 . -217) (undo-tree-id140 . -217) (undo-tree-id141 . -217) (undo-tree-id142 . -154) (undo-tree-id143 . -154) (undo-tree-id144 . -154) (undo-tree-id145 . -154) (undo-tree-id146 . -154) (undo-tree-id147 . -154) (undo-tree-id148 . -154) (undo-tree-id149 . -154) (undo-tree-id150 . -119) (undo-tree-id151 . -119) (undo-tree-id152 . -119) (undo-tree-id153 . -119) (undo-tree-id154 . -118) (undo-tree-id155 . -118) (undo-tree-id156 . -118) (undo-tree-id157 . -118) (undo-tree-id158 . -68) (undo-tree-id159 . -68) (undo-tree-id160 . -68) (undo-tree-id161 . -68) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1)) nil (25225 54257 713581 0) 0 nil])
nil
nil
([nil nil ((11883 . 11917) 10619 (t 25225 54257 722618 898000)) nil (25226 32692 749983 0) 0 nil])
([nil nil ((#("insert " 0 7 (fontified nil)) . 11895) (11906 . 11913) 10619 (t 25226 32692 763133 113000)) nil (25226 32703 389405 0) 0 nil])
([nil nil ((11888 . 11889) (#("chang" 0 5 (fontified nil)) . 11888) (11894 . 11895) 10619 (t 25226 32703 400602 553000)) nil (25226 32705 130921 0) 0 nil])
([nil nil ((11914 . 11959) 10619 (t 25226 32705 139631 764000)) nil (25226 32726 522482 0) 0 nil])
([nil nil ((11956 . 11967) 10619 (t 25226 32726 531093 830000)) nil (25226 32740 416762 0) 0 nil])
([nil nil ((11970 . 12026) 10619 (t 25226 32740 425925 160000)) nil (25226 32764 843378 0) 0 nil])
([nil nil ((12026 . 12088) 10619 (t 25226 32764 853599 172000)) nil (25226 32782 956948 0) 0 nil])
([nil nil ((12088 . 12149) 10619 (t 25226 32782 965359 522000)) nil (25226 32790 867612 0) 0 nil])
([nil nil ((#("B" 0 1 (fontified nil)) . 12138) (12140 . 12143) (#("OCK" 0 3 (fontified nil)) . 12140) 10619 (t 25226 32790 875953 298000)) nil (25226 32793 750126 0) 0 nil])
([nil nil ((12127 . 12128) 10619 (t 25226 32793 758719 853000)) nil (25226 32805 573092 0) 0 nil])
([nil nil ((12010 . 12025) (12011 . 12013) (12019 . 12022) (12020 . 12023) (12024 . 12025) 10619 (t 25226 32805 583149 453000)) nil (25226 32914 191982 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12067 . 12068) (nil fontified nil 12047 . 12068) (12047 . 12068) (t 25226 32914 200744 857000)) nil (25226 32929 191343 0) 0 nil])
([nil nil ((#("'" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 12010) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (t 25226 32929 200711 781000)) nil (25226 32940 820130 0) 0 nil])
([nil nil ((#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 12010) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . 1) (undo-tree-id102 . -1)) nil (25226 32940 820114 0) 0 nil])
([nil nil ((#("\"── VISUAL BLOCK ──\"  " 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 9 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 9 12 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 12 13 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 13 16 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 16 20 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 20 22 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 12025) (undo-tree-id69 . -5) (undo-tree-id70 . -20) (undo-tree-id71 . -20) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) 12030) nil (25226 32940 820095 0) 0 nil])
([nil nil ((#(" \"── VISUAL LINE ──\"" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 19 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 19 20 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t rear-nonsticky t fontified t)) . 12024) (undo-tree-id0 . -4) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -19) (undo-tree-id4 . -19) (undo-tree-id5 . -19) (undo-tree-id6 . -19) (undo-tree-id7 . -19) (undo-tree-id8 . -19) (undo-tree-id9 . -19) (undo-tree-id10 . -19) (undo-tree-id11 . -19) (undo-tree-id12 . -19) (undo-tree-id13 . -19) (undo-tree-id14 . -19) (undo-tree-id15 . -19) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) 12028) nil (25226 32940 820050 0) 0 nil])
([nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 12024) (undo-tree-id111 . 1) (undo-tree-id112 . -1) (t 25226 32940 831658 481000)) nil (25226 32941 852394 0) 0 nil])
([nil nil ((#("(setq-default evil-visual-block-message \"── VISUAL BLOCK ──\")
(setq-default evil-visual-line-message  \"── VISUAL LINE ──\")
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 13 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 13 40 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 40 60 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 60 62 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 62 63 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 63 75 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 75 101 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 101 102 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 102 114 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 114 117 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 117 121 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 121 123 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 12026) (undo-tree-id113 . -5) (undo-tree-id114 . -102) (undo-tree-id115 . -102) (undo-tree-id116 . -40) (undo-tree-id117 . -5) (undo-tree-id118 . -123) (undo-tree-id119 . -40) (undo-tree-id120 . -54) (undo-tree-id121 . -54) (undo-tree-id122 . -54) (undo-tree-id123 . -54) (undo-tree-id124 . -54) (undo-tree-id125 . -54) (undo-tree-id126 . -54) (undo-tree-id127 . -54) (undo-tree-id128 . -54) (undo-tree-id129 . -54) (undo-tree-id130 . -54) (undo-tree-id131 . -54) (undo-tree-id132 . -54) (undo-tree-id133 . -54) (undo-tree-id134 . -54) (undo-tree-id135 . -54) (undo-tree-id136 . -53) (undo-tree-id137 . -53) (undo-tree-id138 . -53) (undo-tree-id139 . -53) (undo-tree-id140 . -52) (undo-tree-id141 . -52) (undo-tree-id142 . -52) (undo-tree-id143 . -52) (undo-tree-id144 . -51) (undo-tree-id145 . -51) (undo-tree-id146 . -51) (undo-tree-id147 . -51) (undo-tree-id148 . -50) (undo-tree-id149 . -50) (undo-tree-id150 . -50) (undo-tree-id151 . -50) (undo-tree-id152 . -49) (undo-tree-id153 . -49) (undo-tree-id154 . -49) (undo-tree-id155 . -49) (undo-tree-id156 . -49) (undo-tree-id157 . -49) (undo-tree-id158 . -49) (undo-tree-id159 . -49) (undo-tree-id160 . -48) (undo-tree-id161 . -48) (undo-tree-id162 . -48) (undo-tree-id163 . -48) (undo-tree-id164 . -47) (undo-tree-id165 . -47) (undo-tree-id166 . -47) (undo-tree-id167 . -47) (undo-tree-id168 . -46) (undo-tree-id169 . -46) (undo-tree-id170 . -46) (undo-tree-id171 . -46) (undo-tree-id172 . -45) (undo-tree-id173 . -45) (undo-tree-id174 . -45) (undo-tree-id175 . -45) (undo-tree-id176 . -44) (undo-tree-id177 . -44) (undo-tree-id178 . -44) (undo-tree-id179 . -44) (undo-tree-id180 . -43) (undo-tree-id181 . -43) (undo-tree-id182 . -43) (undo-tree-id183 . -43) (undo-tree-id184 . -42) (undo-tree-id185 . -42) (undo-tree-id186 . -42) (undo-tree-id187 . -42) (undo-tree-id188 . -41) (undo-tree-id189 . -41) (undo-tree-id190 . -41) (undo-tree-id191 . -41) (undo-tree-id192 . -40) (undo-tree-id193 . -40) (undo-tree-id194 . -40) (undo-tree-id195 . -40) (undo-tree-id196 . -40) (undo-tree-id197 . -40) (undo-tree-id198 . -40) (undo-tree-id199 . -40) (undo-tree-id200 . -40) (undo-tree-id201 . -40) (undo-tree-id202 . -40) (undo-tree-id203 . -40) (undo-tree-id204 . -40) (undo-tree-id205 . -40) (undo-tree-id206 . -40) (undo-tree-id207 . -40) (undo-tree-id208 . -102) (undo-tree-id209 . -102) (undo-tree-id210 . -102) (undo-tree-id211 . -102) (undo-tree-id212 . -123) (undo-tree-id213 . -40) (undo-tree-id214 . -102) (undo-tree-id215 . -102) (undo-tree-id216 . -102) (undo-tree-id217 . -102) (undo-tree-id218 . -102) (undo-tree-id219 . -102) (undo-tree-id220 . -102) (undo-tree-id221 . -102) (undo-tree-id222 . -102) (undo-tree-id223 . -40) (undo-tree-id224 . -40) (undo-tree-id225 . -40) (undo-tree-id226 . -40) (undo-tree-id227 . -40) 12066 (t 25226 32941 861964 377000)) nil (25226 32956 532520 0) 0 nil])
([nil nil ((11970 . 11973) 10619 (t 25226 32956 543396 880000)) nil (25226 32983 505364 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 11970) (11999 . 12002) (#("stat" 0 4 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 11999) 10619 (t 25226 32983 516872 885000)) nil (25226 33283 814972 0) 0 nil])
([nil nil ((12020 . 12025) 10619 (t 25226 33283 831232 302000)) nil (25226 33291 673756 0) 0 nil])
([nil nil ((12030 . 12151) 10619 (t 25226 33291 684258 865000)) nil (25226 33301 276520 0) 0 nil])
([nil nil ((11996 . 12000) (#("line" 0 3 (fontified nil) 3 4 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 11996) (#("L " 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 12018) (#("INE" 0 3 (fontified nil)) . 12021) (12116 . 12117) (12117 . 12120) (#("ine" 0 3 (fontified nil)) . 12117) 10619 (t 25226 33301 286681 598000)) nil (25226 33351 503821 0) 0 nil])
([nil nil ((12009 . 12010) (12063 . 12064) 10619 (t 25226 33351 514493 517000)) nil (25226 33357 139246 0) 0 nil])
([nil nil ((#("── INSERT ──" 0 12 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 11955) (undo-tree-id0 . -8) (undo-tree-id1 . -12) (undo-tree-id2 . -12) (undo-tree-id3 . -12) (undo-tree-id4 . -12) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) (undo-tree-id8 . -12) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -9) (undo-tree-id18 . -9) (undo-tree-id19 . -9) (undo-tree-id20 . -9) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) 11963 (t 25226 33357 149799 50000)) nil (25226 33498 38369 0) 0 nil])
([nil nil ((11984 . 11989) (#("char" 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 11984) (undo-tree-id88 . -1) 11985 (t 25226 33498 48333 21000)) nil (25226 33515 247633 0) 0 nil])
([nil nil ((#("(setq-default evil-visual-line-message  \"── VISUAL LINE ──\")
(setq-default evil-visual-block-message \"── VISUAL BLOCK ──\")
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 13 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 13 40 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 40 59 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 59 62 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 62 74 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 74 101 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 101 121 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 121 123 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 12015) (undo-tree-id56 . -93) (undo-tree-id57 . -93) (undo-tree-id58 . -32) (undo-tree-id59 . -93) (undo-tree-id60 . -32) (undo-tree-id61 . -32) (undo-tree-id62 . -32) (undo-tree-id63 . -32) (undo-tree-id64 . -32) (undo-tree-id65 . -32) (undo-tree-id66 . -32) (undo-tree-id67 . -32) (undo-tree-id68 . -123) (undo-tree-id69 . -32) (undo-tree-id70 . -93) (undo-tree-id71 . -32) (undo-tree-id72 . -32) (undo-tree-id73 . -32) (undo-tree-id74 . -32) (undo-tree-id75 . -32) (undo-tree-id76 . -32) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -93) (undo-tree-id80 . -93) (undo-tree-id81 . -93) (undo-tree-id82 . -93) (undo-tree-id83 . -93) (undo-tree-id84 . -93) (undo-tree-id85 . -93) (undo-tree-id86 . -93) (undo-tree-id87 . -93) 12108) nil (25226 33515 247628 0) 0 nil])
([nil nil ((#("── VISUAL ──" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 12 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 12000) (undo-tree-id30 . -8) (undo-tree-id31 . -12) (undo-tree-id32 . -12) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -10) (undo-tree-id40 . -10) (undo-tree-id41 . -10) (undo-tree-id42 . -10) (undo-tree-id43 . -9) (undo-tree-id44 . -9) (undo-tree-id45 . -9) (undo-tree-id46 . -9) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) 12008) nil (25226 33515 247584 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 11998) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (t 25226 33515 257924 191000)) nil (25226 35627 377238 0) 0 nil])
([nil nil ((12893 . 13600)) ((#("


  (defun key-chord-define (keymap keys command)
    \"Define in KEYMAP, a key-chord of the two keys in KEYS starting a COMMAND.

KEYS can be a string or a vector of two elements. Currently only
elements that corresponds to ascii codes in the range 32 to 126
can be used.

COMMAND can be an interactive function, a string, or nil.
If COMMAND is nil, the key-chord is removed.\"
    (if (/= 2 (length keys))
        (error \"Key-chord keys must have two elements\"))
    ;; Exotic chars in a string are >255 but define-key wants 128..255
    ;; for those.
    (let ((key1 (logand 255 (aref keys 0)))
          (key2 (logand 255 (aref keys 1))))
      (define-key keymap (vector 'key-chord key1 key2) command)))" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 1 552 (fontified nil) 552 707 (fontified nil)) . 12893)) (25226 35627 876857 0) 0 nil])
([nil nil ((13445 . 13446)) ((#("k" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 13445)) (25226 35628 136670 0) 0 nil])
([nil nil ((#("k" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 13445)) ((13445 . 13446)) (25226 35628 340260 0) 0 nil])
([nil nil ((#("  (key-chord-define evil-insert-state-map \"jk\" 'evil-normal-state)
  (key-chord-mode 1)
" 0 42 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 42 46 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 46 87 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 87 88 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 12806)) ((12806 . 12894)) (25226 35628 540835 0) 0 nil])
([nil nil ((13512 . 13514)) ((#("

" 0 2 (fontified nil)) . 13512)) (25226 35628 765083 0) 0 nil])
([nil nil ((13514 . 13602)) ((#("
  (key-chord-define evil-insert-state-map \"jk\" 'evil-normal-state)
  (key-chord-mode 1)" 0 3 (fontified nil) 3 88 (fontified nil)) . 13514)) (25226 35628 992675 0) 0 nil])
([nil nil ((#(";; bind jk
  " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 3 11 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil) 11 13 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil)) . 12749) (12805 . 12806) (12807 . 12846)) ((#("  ;; redefine chord definition so that " 0 39 (fontified nil)) . 12807) (#("
" 0 1 (fontified nil)) . 12805) (12749 . 12762)) (25226 35629 206553 0) 0 nil])
([nil nil ((12834 . 12856)) ((#("keys can't be reversed" 0 22 (fontified nil)) . 12834)) (25226 35629 424426 0) 0 nil])
([nil nil ((13566 . 13583)) ((#(";; bind jk to 
  " 0 14 (fontified nil) 14 17 (fontified nil)) . 13566)) (25226 35629 640702 0) 0 nil])
([nil nil ((13580 . 13583)) ((#("ESC" 0 3 (fontified nil)) . 13580)) (25226 35640 840982 0) 0 nil])
([nil nil ((13580 . 13592) (#("ESC" 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 13580)) ((13580 . 13583) (#("normal state" 0 12 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 13580)) (25226 35646 630313 0) 0 nil])
([nil nil ((1085 . 1093) (t 25226 35647 598107 524000)) nil (25226 35736 787091 0) 0 nil] [nil nil ((10519 . 10522) (#("
" 0 1 (fontified t)) . 10519)) ((10519 . 10520) (#("er-" 0 3 (face org-level-1 fontified t)) . 10519)) (25226 35644 843038 0) 0 nil] [nil nil ((13660 . 13662) 12693 (t 25226 34068 345636 729000)) ((#("

" 0 2 (fontified nil)) . 13660) (t 25226 34069 396328 226000)) (25226 34069 383934 0) 0 nil])
([nil nil ((4293 . 4308) (#("customizations" 0 14 (fontified t)) . -4293) (undo-tree-id24 . -2) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) 4295 (t 25226 35736 800079 18000)) nil (25226 35785 803949 0) 0 nil])
nil
nil
([nil nil ((4293 . 4306) (#("customization's" 0 15 (fontified t)) . 4293) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) 4295) nil (25226 35785 803929 0) 0 nil])
([nil nil ((4307 . 4309) (#("are" 0 3 (fontified t)) . 4307) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) 4309) nil (25226 35785 803911 0) 0 nil])
([nil nil ((#("  ;; set default email address
" 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 2 5 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 5 31 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 59303) (undo-tree-id46 . -21) 59324 (t 25226 35785 816616 261000)) nil (25226 35834 608817 0) 0 nil])
([nil nil ((#("  (setq-default user-mail-address \"william.aroque@gmail.com\")

" 0 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 3 15 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 15 34 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 34 60 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 60 61 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 61 63 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 59303) (undo-tree-id47 . -62) (undo-tree-id48 . -21) (undo-tree-id49 . -62) (undo-tree-id50 . -21) (undo-tree-id51 . -21) (undo-tree-id52 . -62) (undo-tree-id53 . -62) (undo-tree-id54 . -62) (undo-tree-id55 . -62) (undo-tree-id56 . -62) (undo-tree-id57 . -62)) ((59303 . 59366)) (25226 35835 518166 0) 0 nil])
([nil nil ((528 . 530) 520) nil (25226 35847 48113 0) 0 nil])
([nil nil ((529 . 553)) ((#("Personal information." 0 21 (fontified nil)) . 529) (undo-tree-id58 . -21) (undo-tree-id59 . -21) (#("

" 0 1 (fontified t) 1 2 (fontified t)) . 550) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (#("e" 0 1 (fontified t)) . 552)) (25226 35848 158578 0) 0 nil])
([nil nil ((552 . 557) (551 . 552) (#("
" 0 1 (fontified t)) . -551) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("e" 0 1 (fontified t)) . -552) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("l" 0 1 (fontified t)) . -553) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("i" 0 1 (fontified t)) . -554) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("s" 0 1 (fontified t)) . -555) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#("p" 0 1 (fontified t)) . -556) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) 557 (552 . 557) (#("e" 0 1 (fontified t)) . -552) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("l" 0 1 (fontified t)) . -553) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("i" 0 1 (fontified t)) . -554) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("s" 0 1 (fontified t)) . -555) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("p" 0 1 (fontified t)) . -556) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) 557 (553 . 557)) nil (25226 35877 425762 0) 0 nil])
([nil nil ((557 . 558) 556) nil (25226 35877 425278 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 560 . 561) (#("
" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -621) (558 . 622)) nil (25226 35877 425276 0) 0 nil])
([nil nil ((#("  " 0 1 (fontified t font-lock-fontified t src-block t) 1 2 (rear-nonsticky t fontified t font-lock-fontified t src-block t)) . -559) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) 561) nil (25226 35877 425274 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -552) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 553 (#("m" 0 1 (fontified t)) . -553) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("a" 0 1 (fontified t)) . -554) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 555 (552 . 555) (552 . 553) (#("elisp
" 0 6 (fontified t)) . 552) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . 6) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6)) nil (25226 35877 425258 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 551 . 552) (#("
" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -586) (551 . 587)) nil (25226 35877 425132 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 649 . 650) (#("
" 0 1 (fontified nil face org-block-end-line)) . -659) (649 . 660)) nil (25226 35877 425130 0) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 649) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1)) nil (25226 35877 425127 0) 0 nil])
([nil nil ((#("

" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 587) (undo-tree-id62 . 2) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -2) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1)) nil (25226 35877 425104 0) 0 nil])
([nil nil ((587 . 647) (t 25226 35877 437959 129000)) nil (25226 35886 954129 0) 0 nil])
([nil nil ((606 . 610) (#("mail" 0 4 (help-echo nil face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 606)) nil (25226 35886 954127 0) 0 nil])
([nil nil ((611 . 615) (#("address" 0 7 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 611) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 612) nil (25226 35897 907610 0) 0 nil])
([nil nil ((617 . 618) (#("w" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 617) (624 . 629) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 624) (627 . 629) (#("@gmail.com" 0 10 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 631) 587) nil (25226 35903 913549 0) 0 nil] [nil nil ((637 . 638) (632 . 638) (625 . 703) (617 . 696) (#("w" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . -617) (undo-tree-id678 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . -618) (undo-tree-id679 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . -619) (undo-tree-id680 . -1) 620 (617 . 620) (#("william.aroque@gmail.com" 0 24 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 617) (undo-tree-id681 . -3) (undo-tree-id683 . -1) (undo-tree-id685 . -1) (undo-tree-id687 . -2) (undo-tree-id689 . -2) (undo-tree-id691 . -3) (undo-tree-id693 . -3) (undo-tree-id695 . -3) (undo-tree-id697 . -3) 620 (t 25226 35886 966159 617000)) ((617 . 641) (#("wil" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t) 1 2 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t) 2 3 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t)) . 617) (undo-tree-id705 . -3) (617 . 620) (#("William                                                                        " 0 8 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t) 8 79 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t)) . 617) (undo-tree-id706 . -8) (undo-tree-id707 . -8) (undo-tree-id708 . -8) (undo-tree-id709 . -8) (undo-tree-id710 . -8) (undo-tree-id711 . -8) (undo-tree-id712 . -8) (undo-tree-id713 . -8) (undo-tree-id714 . -8) (undo-tree-id715 . -8) (undo-tree-id716 . -8) (undo-tree-id717 . -8) (undo-tree-id718 . -8) (undo-tree-id719 . -8) (undo-tree-id720 . -8) (undo-tree-id721 . -8) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (#("Aguiar                                                                        " 0 7 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t) 7 78 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t)) . 625) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (undo-tree-id729 . -7) (undo-tree-id730 . -7) (undo-tree-id731 . -7) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -7) (undo-tree-id735 . -7) (undo-tree-id736 . -7) (undo-tree-id737 . -7) (undo-tree-id738 . -7) (undo-tree-id739 . -7) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (#("Roque\"" 0 5 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t) 5 6 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified nil src-block t font-lock-fontified t)) . 632) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -5) (undo-tree-id747 . -5) (undo-tree-id748 . -5) (undo-tree-id749 . -5) (undo-tree-id750 . -5) (undo-tree-id751 . -5) (undo-tree-id752 . -5) (undo-tree-id753 . -5) (undo-tree-id754 . -5) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5) (undo-tree-id759 . -5) (#("\\" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t)) . 637) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (t 25226 35894 855730 881000)) (25226 35897 329231 0) 0 nil])
([nil nil ((35374 . 35375) 35365 (t 25226 35903 924452 360000)) nil (25226 36430 688499 0) 0 nil])
([nil nil ((#("\\" 0 1 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 637) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (t 25226 35894 855730 881000)) ((637 . 638)) (25226 35896 950230 0) 0 nil])
([nil nil ((35363 . 35366) (t 25226 36430 702930 562000)) nil (25226 36447 209646 0) 0 nil])
([nil nil ((782 . 783)) ((#(")" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) . 782) (undo-tree-id703 . 1) (undo-tree-id704 . -1)) (25226 35896 950021 0) 0 nil])
([nil nil ((35340 . 35379) (#("


" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 35363) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) 35305) nil (25226 36447 209640 0) 0 nil])
nil
([nil current ((35375 . 35424) 35305 (t 25226 36447 221027 283000)) nil (25226 36456 218167 0) 0 nil])
nil
